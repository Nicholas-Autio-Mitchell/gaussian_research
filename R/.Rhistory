install.packages("vars")
install.packages("MSBVAR")
install.packages("SuppDists")
library("SuppDists", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
xx<-rnorm(500)
parms<-JohnsonFit(xx)
sJohnson(parms)
plot(function(xx)dJohnson(xx,parms),-2,2)
pJohnson(1,parms)
parms2<-JohnsonFit(rexp(50))
qJohnson(p=0.5,list(parms,parms2))
xx
xx<-rnorm(10000)
parms<-JohnsonFit(xx)
sJohnson(parms)
plot(function(xx)dJohnson(xx,parms),-2,2)
pJohnson(1,parms)
parms2<-JohnsonFit(rexp(50))
qJohnson(p=0.5,list(parms,parms2))
xx
parms<-JohnsonFit(xx)
sJohnson(parms)
plot(function(xx)dJohnson(xx,parms),-2,2)
pJohnson(1,parms)
parms2<-JohnsonFit(rexp(50))
qJohnson(p=0.5,list(parms,parms2))
n <- 1000
mean.eq <- 0.001
sd.eq   <- 0.02
contamination.ratio <- 0.01
contaminated.sd <- 6
cf1 <- 1
cf2 <- 0.8
###
x <- numeric(n)
contaminatedN <- round(n*contamination.ratio)
contaminated.idx <- sample(1:n,contaminatedN,replace=FALSE)
x[contaminated.idx] <- rnorm(contaminatedN,mean.eq,contaminated.sd)/100
sd.d <- numeric(n)
for (i in 1:n) {
if (is.na(match(i,contaminated.idx))) {
sd.d[i] <- sum( (cf1/abs(i-contaminated.idx)^cf2) * abs(x[contaminated.idx]) )
x[i]    <- rnorm( 1,0,sd.eq + ifelse(sd.d[i]>sd.eq,sd.d[i],0) )
} else sd.d[i] <- sd.d[i-1]
}
par(mfrow=c(3,1))
plot(cumsum(x),type="l")
plot(x,type="l")
plot(sd.d,type="l")
abline(h=sd.eq,col="Red",lty="dotted")
par(mfrow=c(1,1))
contiminated.test <- 0.3
require(GLDEX)
install.packages(c("GLDEX", "quantmod"))
library("GLDEX", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install.packages(c("cluster"))
install.packages(c("cluster"))
library("GLDEX", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
detach("package:cluster", unload=TRUE)
library("cluster", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
detach("package:cluster", unload=TRUE)
library("cluster", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("quantmod", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
zoo
rprofile
language=en
language="en"
rprofile
options()
.rprofile
library("splines", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
getwd()
setwd()
setwd("/Volumes/Mac OS Drive/Documents/FIM/Forschung/Forschungsphase/Simulations/R")
load("GLDEX")
require("GLDEX")
library("foreign")
?library
?require
?help
packages
open packages
packages
package
pack
?quantmod
?quant
help quantmod
Apple.options <- getOptionsChain("AAPL", NULL)
Apple.options <- getOptionChain("AAPL", NULL)
Apple.options <- getOptionChain("AAPL", NULL)
getSymbols("YHOO",src="google")
getSymbols("YHOO",src="google")
